// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: "dependencies.gradle"
    apply from: "extras.gradle"
    ext {
        kotlin_version = kotlinVersion
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'http://jhoobin.abroid.com/repo/' }
        maven { url "https://dl.bintray.com/ahelpteam/BiglyticTeam" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://dl.bintray.com/ahelpteam/BiglyticTeam" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    def values = loadValues()
    serverApiKey = values.getProperty('API_KEY')
    baseUrl = values.getProperty('API_BASE_URL')
}

def loadValues() {
    Properties localProperties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
    } else {
        localProperties.setProperty('API_KEY', System.getenv("API_KEY"))
        localProperties.setProperty('API_BASE_URL', System.getenv("API_BASE_URL"))
    }
    return localProperties
}